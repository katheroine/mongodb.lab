db.createCollection("quote", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: [ "id", "owner_id", "content" ],
            properties: {
                id: {
                    bsonType: "int",
                    description: "'id' must be an integer and is required"
                },
                owner_id: {
                    bsonType: "int",
                    description: "'owner_id' must be an integer and is required"
                },
                content: {
                    bsonType: "string",
                    description: "'content' must be a string and is required"
                },
                author: {
                    bsonType: "string",
                    description: "'author' must be a string"
                },
                source: {
                    bsonType: "string",
                    description: "'source' must be a string"
                },
                rating: {
                    bsonType: "int",
                    description: "'rating' must be a string"
                }
            }
        }
    }
});

db.quote.insertMany([
    {
        id: NumberInt(1),
        owner_id: NumberInt(101),
        content: "Though this be madness, yet there is method in 't.",
        author: "William Shakespeare",
        source: "Hamlet",
        rating: NumberInt(5)
    },
    {
        id: NumberInt(2),
        owner_id: NumberInt(102),
        content: "Pride relates more to our opinion of ourselves, vanity to what we would have others think of us.",
        author: "Jane Austen",
        source: "Pride and Prejudice",
        rating: NumberInt(4)
    },
    {
        id: NumberInt(3),
        owner_id: NumberInt(103),
        content: "All of science is nothing more than the refinement of everyday thinking.",
        author: "Albert Einstein",
        source: "Physics and Reality",
        rating: NumberInt(5)
    },
    {
        id: NumberInt(4),
        owner_id: NumberInt(104),
        content: "There is no greater agony than bearing an untold story inside you.",
        author: "Maya Angelou",
        source: "I Know Why the Caged Bird Sings",
        rating: NumberInt(4)
    },
    {
        id: NumberInt(5),
        owner_id: NumberInt(105),
        content: "The higher we soar the smaller we appear to those who cannot fly.",
        author: "Friedrich Nietzsche",
        source: "Thus Spoke Zarathustra",
        rating: NumberInt(3)
    },
    {
        id: NumberInt(6),
        owner_id: NumberInt(106),
        content: "Nowadays people know the price of everything and the value of nothing.",
        author: "Oscar Wilde",
        source: "The Picture of Dorian Gray",
        rating: NumberInt(4)
    },
    {
        id: NumberInt(7),
        owner_id: NumberInt(107),
        content: "Service without humility is selfishness and egotism.",
        author: "Mahatma Gandhi",
        source: "The Story of My Experiments with Truth",
        rating: NumberInt(5)
    },
    {
        id: NumberInt(8),
        owner_id: NumberInt(108),
        content: "There is no gate, no lock, no bolt that you can set upon the freedom of my mind.",
        author: "Virginia Woolf",
        source: "A Room of One's Own",
        rating: NumberInt(3)
    },
    {
        id: NumberInt(9),
        owner_id: NumberInt(109),
        content: "If you tell the truth you do not need a good memory!",
        author: "Mark Twain",
        source: "The Adventures of Huckleberry Finn",
        rating: NumberInt(3)
    },
    {
        id: NumberInt(10),
        owner_id: NumberInt(110),
        content: "Freedom is obedience to self-formulated rules.",
        author: "Aristotle",
        source: "Nicomachean Ethics",
        rating: NumberInt(5)
    }
]);

db.quote.find();

db.quote.find().pretty();

db.quote.find(
    {},
    {
        author: true,
        source: true
    }
);

db.quote.find(
    {},
    {
        author: true,
        source: true
    }
).pretty();

db.quote.find(
    {
        owner_id: 106
    }
);

db.quote.find(
    {
        owner_id: 106
    }
).pretty();

db.quote.find(
    {
        rating: {
            $gt: 4
        }
    },
    {
        author: true,
        source: true,
        rating: true
    }
);

db.quote.find(
    {
        rating: {
            $gt: 4
        }
    },
    {
        author: true,
        source: true,
        rating: true
    }
).pretty();

db.quote.find(
    {
        rating: {
            $eq: 5
        }
    }
).pretty();

db.quote.find(
    {
        rating: {
            $ne: 5
        }
    }
).pretty();

db.quote.find(
    {
        rating: {
            $lt: 4
        }
    }
).pretty();

db.quote.find(
    {
        rating: {
            $lte: 4
        }
    }
).pretty();

db.quote.find(
    {
        rating: {
            $gt: 4
        }
    }
).pretty();

db.quote.find(
    {
        rating: {
            $gte: 4
        }
    }
).pretty();

db.quote.find(
    {
        rating: {
            $in: [3, 5]
        }
    }
).pretty();

db.quote.find(
    {
        rating: {
            $nin: [3, 5]
        }
    }
).pretty();

db.quote.find(
    {
        rating: {
            $not:
            {
                $in: [3, 5]
            }
        }
    }
).pretty();

db.quote.find(
    {
        $and: [
            {
                rating: 3
            },
            {
                id: {
                    $lt: 6
                }
            }
        ]
    }
).pretty();

db.quote.find(
    {
        $or: [
            {
                rating: 5
            },
            {
                id: {
                    $lt: 3
                }
            }
        ]
    }
).pretty();

db.quote.find(
    {
        $nor: [
            {
                rating: 4
            },
            {
                id: {
                    $gt: 4
                }
            }
        ]
    }
).pretty();

db.quote.find(
    {
        rating: {
                $exists: true
            }
    }
).pretty();

db.quote.find(
    {
        rating: {
                $type: "int"
            }
    }
).pretty();

db.quote.find(
    {
        rating: {
                $mod: [2, 0]
            }
    }
).pretty();

db.quote.find(
    {
        content: {
                $regex: /ing\./
            }
    }
).pretty();

db.quote.find(
    {
        $expr: {
                $gt: ["$id", "$rating"]
            }
    }
).pretty();

db.createCollection("user", {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: [ "login" ],
            properties: {
                login: {
                    bsonType: "string",
                    description: "'login' must be a string and is required"
                },
                group_name: {
                    bsonType: "string",
                    description: "'group_name' must be a string"
                },
                credits: {
                    bsonType: "int",
                    description: "'credits' must be a string"
                }
            }
        }
    }
});

db.user.insertMany([
    {
        login: "john_doe",
        group_name: "bloggers",
        credits: NumberInt(100)
    },
    {
        login: "science_gal",
        group_name: "scientists",
        credits: NumberInt(250)
    },
    {
        login: "news_hound",
        group_name: "journalists",
        credits: NumberInt(150)
    },
    {
        login: "study_buddy",
        group_name: "students",
        credits: NumberInt(50)
    },
    {
        login: "data_miner",
        group_name: "researchers",
        credits: NumberInt(200)
    },
    {
        login: "craft_master",
        group_name: "hobbyists",
        credits: NumberInt(75)
    },
    {
        login: "tech_blogger",
        group_name: "bloggers",
        credits: NumberInt(120)
    },
    {
        login: "quantum_guy",
        group_name: "scientists",
        credits: NumberInt(300)
    },
    {
        login: "truth_seeker",
        group_name: "journalists",
        credits: NumberInt(180)
    },
    {
        login: "college_kid",
        group_name: "students",
        credits: NumberInt(30)
    },
    {
        login: "lab_rat",
        group_name: "researchers",
        credits: NumberInt(220)
    },
    {
        login: "diy_enthusiast",
        group_name: "hobbyists",
        credits: NumberInt(90)
    },
    {
        login: "food_critic",
        group_name: "bloggers",
        credits: NumberInt(80)
    },
    {
        login: "rocket_woman",
        group_name: "scientists",
        credits: NumberInt(280)
    },
    {
        login: "roving_reporter",
        group_name: "journalists",
        credits: NumberInt(160)
    },
    {
        login: "grad_student",
        group_name: "students",
        credits: NumberInt(40)
    },
    {
        login: "book_worm",
        group_name: "researchers",
        credits: NumberInt(240)
    },
    {
        login: "stamp_collector",
        group_name: "hobbyists",
        credits: NumberInt(60)
    },
    {
        login: "travel_guru",
        group_name: "bloggers",
        credits: NumberInt(110)
    },
    {
        login: "chem_whiz",
        group_name: "scientists",
        credits: NumberInt(270)
    }
]);

db.user.aggregate([
    {
        $match: {}
    },
    {
        $count: "count"
    }
]);

db.user.aggregate([
    {
        $match: {
            group_name: "researchers"
        }
    },
    {
        $count: "users number"
    }
]);

db.user.aggregate([
    {
        $group: {
            _id: null,
            minimum_credits: {
                $min: "$credits"
            }
        }
    }
]);

db.user.aggregate([
    {
        $group: {
            _id: null,
            maximum_credits: {
                $max: "$credits"
            }
        }
    }
]);

db.user.aggregate([
    {
        $group: {
            _id: null,
            total_credits: {
                $sum: "$credits"
            }
        }
    }
]);

db.user.aggregate([
    {
        $group: {
            _id: null,
            average_credits: {
                $avg: "$credits"
            }
        }
    }
]);

db.user.aggregate([
    {
        $group: {
            _id: null,
            standard_deviation_of_credits: {
                $stdDevPop: "$credits"
            }
        }
    }
]);

db.user.aggregate([
    {
        $group: {
            _id: "$group_name",
            count: {
                $sum: 1
            }
        },

    }
]);

db.user.aggregate([
    {
        $group: {
            _id: "$group_name",
            minimum_credits: {
                $min: "$credits"
            }
        }
    }
]);

db.user.aggregate([
    {
        $group: {
            _id: "$group_name",
            maximum_credits: {
                $max: "$credits"
            }
        }
    }
]);

db.user.aggregate([
    {
        $group: {
            _id: "$group_name",
            total_credits: {
                $sum: "$credits"
            }
        }
    }
]);

db.user.aggregate([
    {
        $group: {
            _id: "$group_name",
            average_credits: {
                $avg: "$credits"
            }
        }
    }
]);

db.user.aggregate([
    {
        $group: {
            _id: "$group_name",
            standard_deviation_of_credits: {
                $stdDevPop: "$credits"
            }
        }
    }
]);
